name: Build and Publish Docker Image
on:
  workflow_call:
    inputs:
      aws-account-id:
        description: "The aws account id used for login."
        type: string
        required: true
      aws-region:
        description: "AWS region of the codeartifact domain."
        type: string
        required: true
      docker-path-context:
        description: "The paht where the dockerfile is located at."
        required: false
        type: string
        default: .
      docker-file:
        description: "The dockerfile to use for building the docker image."
        type: string
        required: true
      docker-image-version-tag:
        description: "The version tag to set when the docker image is built."
        type: string
        required: true

    secrets:
      pip-index-url:
        description: "The pip index url."
        required: true
      pip-extra-index-url:
        description: "The pip extra index url."
        required: true

jobs:
  publish-docker-image:
    name: "Publish Docker Image"
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    permissions:
      id-token: write
      contents: read
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.docker-image-version-tag != ''
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy pip config to active workspace
        run: |
          pip config set global.index-url ${{ secrets.pip-index-url }}
          pip config set global.extra-index-url ${{ secrets.pip-extra-index-url }}
          cp ~/.config/pip/pip.conf ./pip.conf
        shell: bash

      - name: "Configure aws credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/OidcDevOpsRole
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          mask-aws-account-id: true

      - name: Login to AWS ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.aws-account-id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
          logout: true

      - name: "Build, tag, and push image to Amazon ECR"
        uses: docker/build-push-action@v6
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          AWS_ECR_REGISTRY: ${{ inputs.aws-account-id }}.dkr.ecr.${{ inputs.aws-region }}.amazonaws.com
        with:
          context: ${{ inputs.docker-path-context }}
          file: ${{ inputs.docker-file }}
          push: true
          sbom: false
          build-args: |
            PYTHON_PACKAGE=${{ env.REPOSITORY_NAME }}==${{ inputs.docker-image-version-tag }}
          tags: |
            ${{ env.AWS_ECR_REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ inputs.docker-image-version-tag }}
            ${{ env.AWS_ECR_REGISTRY }}/${{ env.REPOSITORY_NAME }}:latest
          secret-files: |
            "PIP_CONFIG=./pip.conf"
